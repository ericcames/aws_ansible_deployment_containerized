---
- name: Ensure we have a access token the Red Hat Customer portal
  register: access_token
  until: access_token is not failed
  retries: 1
  delay: 20
  ansible.builtin.uri:
    url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    return_content: true
    body:
      grant_type: refresh_token
      client_id: rhsm-api
      refresh_token: "{{ offline_token }}"

- name: Ensure we have the AAP bundle
  register: download_aap_tarball
  until: download_aap_tarball is not failed
  retries: 15
  delay: 20
  ansible.builtin.get_url:
    url: https://api.access.redhat.com/management/v1/images/{{ aap_bundle_sha_value }}/download
    headers:
      accept: application/json
      Authorization: Bearer {{ access_token.json.access_token }}
    dest: /var/lib/awx/aap.tar.gz
    checksum: "sha256: {{ aap_bundle_sha_value }}"

- name: Ensure the aap bundle is opened up
  ansible.builtin.unarchive:
    src: /var/lib/awx/aap.tar.gz
    dest: /var/lib/awx/
    remote_src: true

- name: Ensure we have the AAP bundle directory
  register: aap_bundle_dir
  changed_when: false
  ansible.builtin.shell: ls -d /var/lib/awx/ansible-automation-platform-containerized-setup-bundle*

- name: Ensure the inventory file is configured to install the Controller
  ansible.builtin.template:
    src: templates/containerized_aap_24_inventory_controller_file.j2
    dest: "{{ aap_bundle_dir.stdout }}/inventory"
    owner: root
    group: root
    mode: "0644"
    backup: true

- name: Ensure the /usr/lib/awx direcotry is owned by ansible-svc
  ansible.builtin.file:
    path: /var/lib/awx
    state: directory
    recurse: true
    owner: ansible-svc
    group: ansible-svc

- name: Change the ansible-svc account home directory
  ansible.builtin.user:
    name: ansible-svc
    home: /var/lib/awx

- name: Run the installer
  become_user: ansible-svc
  args:
    chdir: "{{ aap_bundle_dir.stdout }}"
  ansible.builtin.shell:
    cmd: ansible-playbook -i inventory ansible.containerized_installer.install -vvvv
